snippet ie
	if err != nil {
		${0}
	}

snippet ier
	if err != nil {
		return err
	}

snippet iev
	if err := ${1}; err != nil {
		$0
	}

snippet dberr
	if err != nil {
		return ${1}, fmt.Errorf("${2} DB query failed: %w", err)
	}

snippet cmd "A policy-tool/kong command"
  package command

  type ${1} struct {

  }

  func (${2} *${1}) Help() string {
    return \`\`
  }

  func (${2} *${1}) Run(c *Context) error {
    return nil
  }

snippet testsuite
	package ${1}

	import (
		"testing"

		"github.com/stretchr/testify/suite"
	)

	type ${2}TestSuite struct {
		suite.Suite
		service ${2}
	}

	func (s *${2}TestSuite) SetupTest() {

	}

	func (s *${2}TestSuite) Test() {

	}

	func Test${2}TestSuite(t *testing.T) {
		suite.Run(t, new(${2}TestSuite))
	}

snippet struct
  type ${1} struct {
    ${0}
  }

snippet test
  func Test${1}(t *testing.T) {
    t.Parallel()

    type testcase struct {
      ${0}
    }

    testcases := map[string]testcase{
      {},
    }

    for description, tc := range testcases {
      t.Run(description, func (t *testing.T) {
      
      })
    }
  }

snippet with
  func (${1:x} *${2:Type}) With${3:Field}(${4:value} ${5:Type}) *${2} {
    $1.$3 = $4
    return $1
  }
